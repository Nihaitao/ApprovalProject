using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using CommonFramework;
using CommonFramework.Exceptions;
using CommonFramework.IBatisNet.SqlMap;
using CommonFramework.Mvc;
using CommonFramework.Mvc.Attribute;
using CT.Common.Mvc;
using ApprovalProject.Business;
using ApprovalProject.Model;
using ApprovalProject.Model.ViewModel;

namespace ApprovalProject.Web.Controller
{
    public class ApprovalController : StationBaseApiController
    {
        ApprovalMapper mapper = new ApprovalMapper();

        /// <summary>
        /// 添加审批模板
        /// </summary>
        /// <param name="name"></param>
        /// <returns></returns>
        [HttpPost, AllowAnonymous]
        public dynamic AddApprovalTemplet(ApprovalTemplet templet)
        {
            //添加模板主表信息
            Sp_Approvaltype model = new Sp_Approvaltype();
            model.Name = templet.Name;
            model.AddTime = DateTime.Now;
            model.AddPersion = this.AccountID;
            model.System_Station_ID = this.System_Station_ID;
            model.Enditable = 1;//启用
            model.BusType = 1;//非业务审核
            model.EditApprover = templet.EditApprover;
            if (mapper.AddApprovalTemplet(model))
            {
                //添加模板字段明细
                H_Customfield item = null;
                List<TempletField> field = templet.Field;
                for (int i = 0; i < field.Count; i++)
                {
                    item = new H_Customfield();
                    item.BusType = "approval_" + model.ID;
                    item.CreateTime = DateTime.Now;
                    item.System_Station_ID = this.System_Station_ID;
                    item.IsEnable = 1;
                    item.Name = field[i].fieldName;
                    item.ShowName = field[i].fieldName;
                    item.Required = field[i].Required;
                    item.FieldType = field[i].fieldValue;
                    item.SortID = i;
                    if (field[i].fieldValue == 103 || field[i].fieldValue == 109 || field[i].fieldValue == 110)
                    {
                        string dataSource = "";
                        foreach (TempletJson js in field[i].Option)
                        {
                            dataSource += "'" + js.value + "',";
                        }
                        item.DataSource = "[" + dataSource.TrimEnd(',') + "]";
                    }
                    if (mapper.AddCustomfield(item) && field[i].fieldValue == 0)
                    {
                        //添加模板字段明细子集
                        List<TempletField> detail = field[i].DetailField;
                        for (int j = 0; j < detail.Count; j++)
                        {
                            H_Customfield item2 = new H_Customfield();
                            item2.BusType = "approval_" + model.ID;
                            item2.CreateTime = DateTime.Now;
                            item2.System_Station_ID = this.System_Station_ID;
                            item2.IsEnable = 1;
                            item2.Name = detail[j].fieldName;
                            item2.ShowName = detail[j].fieldName;
                            item2.Required = detail[j].Required;
                            item2.FieldType = detail[j].fieldValue;
                            item2.SortID = j;
                            item2.PID = item.ID;
                            if (detail[j].fieldValue == 103 || detail[j].fieldValue == 109 || detail[j].fieldValue == 110)
                            {
                                string dataSource = "";
                                foreach (TempletJson js in detail[j].Option)
                                {
                                    dataSource += "'" + js.value + "',";
                                }
                                item2.DataSource = "[" + dataSource.TrimEnd(',') + "]";
                            }
                            mapper.AddCustomfield(item2);
                        }
                    }
                }
                return Success("操作成功");
            }
            return Success("操作失败");
        }

    }
}